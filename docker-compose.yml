version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1


#  bookpublisher:
#    image: nikitosbarbos/bookpublisher:latest
#    container_name: bookpublisher
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_PROFILES_ACTIVE: 'docker'
#      MY_KAFKA_TOPIC: 'books.published'
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: 'broker:29092'
#    networks:
#      - spring
#      - postgres
#    depends_on:
#      - broker


#  bookpersistence:
#    image: nikitosbarbos/bookpersistence:latest
#    container_name: bookpersistence
#    ports:
#      - "8081:8081"
#    environment:
#      SPRING_PROFILES_ACTIVE: 'docker'
#      MY_KAFKA_NOTIFICATION_TOPIC: 'notification.created'
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: 'broker:29092'
#    networks:
#      - spring
#      - postgres
#    depends_on:
#      - broker


networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin: